{
    "pipes": [],
    "interfaces": [
        {
            "name": "Item",
            "id": "interface-Item-5f71e74bcf81b833cb28e0fee2083e79ea96f162e81cd5bffab81d9740b510428b53c41632d374bea37e5cce7e19bc11cc0640b560fda0d08012d0653daa3eb8",
            "file": "projects/my-lib/src/lib/paginacao/item.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Item {\n    page:number;\n    active:string;\n}",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "projects/my-lib/src/lib/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "PaginacaoComponent",
            "id": "component-PaginacaoComponent-012d7b30181767e3e7611507c8f911c2204957a9b6d252ecaf01e60ad8898649426becfcfe8efa414afe38942ed93ab8332eeb40363dfe493367719c47f82a61",
            "file": "projects/my-lib/src/lib/paginacao/paginacao.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "unifor-paginacao",
            "styleUrls": [
                "paginacao.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "paginacao.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "atualPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "totalPages",
                    "defaultValue": "35",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "Click",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "listItens",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Item>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "showFirst",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "showLast",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "loadPagination",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setPage",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, SimpleChanges } from \"@angular/core\";\nimport { Item } from \"./item\";\n\n@Component({\n    selector: 'unifor-paginacao',\n    templateUrl: 'paginacao.component.html',\n    styleUrls: ['paginacao.component.css']\n})\nexport class PaginacaoComponent {\n\n    @Input()\n    totalPages = 35;\n\n    @Input()\n    atualPage = 1;\n\n    showFirst = true;\n    showLast = true;\n    listItens:Array<Item> = [];\n\n    @Output()\n    Click = new EventEmitter<Event>();\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['atualPage']) {\n          this.loadPagination();\n        }\n      }\n\n    setPage (page:number, event:Event) {\n        this.Click.emit(event);\n        this.atualPage = page;\n        this.loadPagination();\n    }\n\n    loadPagination () {\n\n        let firstPage:number = (this.atualPage - 2) <= 1 ? 1 : this.atualPage - 2;\n        let showTotalPages:number = 5 - (this.atualPage - firstPage) -1;\n        let lastPage:number =  (this.atualPage + showTotalPages);\n\n        if(this.atualPage > (this.totalPages - 3)) {\n            showTotalPages = 5 - (this.totalPages - this.atualPage) - 1\n            firstPage = this.atualPage - showTotalPages\n            lastPage = this.atualPage + (5 - showTotalPages) - 1\n        }\n\n        this.showFirst = this.atualPage > 3 ? true : false;\n\n        this.listItens = [];\n        for(let i = firstPage; i <= lastPage; i++){\n            const active = i == this.atualPage ? 'active' : '';\n            const item:Item = {\"page\":i,\"active\":active};\n            this.listItens.push(item);\n        }\n\n        this.showLast = this.atualPage < (this.totalPages - 2) ? true : false;\n        \n    }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ul {\n  margin: 15px 0;\n}\n\nli {\n  margin: 0;\n}\n\nul :first-child, ol :first-child {\n  margin-top: 0;\n}\n\n.pagination {\n    display: flex;\n    line-height: 1.6;\n    font-family: Marmelad,\"Lucida Grande\",Arial,\"Hiragino Sans GB\",Georgia,sans-serif;\n    font-size: 14px;\n    box-sizing: initial;\n}\n\n.pagination .pagination-pages {\n  float: left;\n  margin-left: 0;\n}\n\n.pagination .pagination-pages ul {\n  float: left;\n  margin: 0;\n  padding: 0;\n}\n\n.pagination .pagination-pages li {\n  float: left;\n  border: 1px solid #aaa;\n  border-right: none;\n  list-style: none;\n}\n\n.pagination .pagination-pages li:first-child, .pagination .pagination-pages li:first-child>a {\n  border-radius: 3px 0 0 3px;\n}\n\n.pagination .pagination-pages li>i {\n  min-width: 30px;\n  height: 28px;\n  line-height: 28px;\n  display: block;\n  background: #fff;\n  font-size: 14px;\n  color: #333;\n  text-decoration: none;\n  text-align: center;\n  cursor: pointer;\n}\n\n.pagination .pagination-pages li>i:hover {\n  background: #eee;\n}\n\n.pagination .pagination-pages li.disabled>i {\n  opacity: .3;\n  cursor: default;\n}\n\n.pagination .pagination-pages li.disabled>i:hover {\n  background: 0 0;\n}\n\n.paginations .pagination-pages li.active {\n  border: none;\n}\n\n.pagination .pagination-pages li.active>i {\n  line-height: 30px;\n  background: #aaa;\n  color: #fff;\n  cursor: default;\n}\n\n.pagination .pagination-pages li:last-child {\n  border-right: 1px solid #aaa;\n  border-radius: 0 3px 3px 0;\n}\n",
                    "styleUrl": "paginacao.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"pagination\">\n    <div class=\"pagination-pages\">\n        <ul>\n            <li *ngIf=\"showFirst\" class=\"pagination-page\" (click)=\"setPage(1, $event)\"><i>1</i></li>\n            <li *ngIf=\"showFirst\" class=\"pagination-ellipsis disabled\"><i>...</i></li>\n\n            <li *ngFor=\"let item of listItens\" class=\"pagination-page {{item.active}}\" (click)=\"setPage(item.page, $event)\"><i>{{item.page}}</i></li>\n\n            <li *ngIf=\"showLast\" class=\"pagination-ellipsis disabled\"><i>...</i></li>\n            <li *ngIf=\"showLast\" class=\"pagination-page pagination-last\" (click)=\"setPage(totalPages, $event)\"><i>{{totalPages}}</i></li>\n            \n        </ul>\n    </div>\n</div>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/my-lib/src/lib/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/my-lib/src/lib/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/my-lib/src/lib/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/my-lib/src/lib/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/my-lib/src/lib/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/my-lib/src/lib/paginacao/Paginacao.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PaginacaoComponent>",
                "defaultValue": "(args: PaginacaoComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "TotalPages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/my-lib/src/lib/paginacao/Paginacao.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/my-lib/src/lib/button/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/my-lib/src/lib/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/my-lib/src/lib/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/my-lib/src/lib/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/my-lib/src/lib/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/my-lib/src/lib/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "projects/my-lib/src/lib/paginacao/Paginacao.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/my-lib/src/lib/paginacao/Paginacao.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PaginacaoComponent>",
                    "defaultValue": "(args: PaginacaoComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "TotalPages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/my-lib/src/lib/paginacao/Paginacao.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 8,
        "status": "low",
        "files": [
            {
                "filePath": "projects/my-lib/src/lib/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "projects/my-lib/src/lib/paginacao/Paginacao.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/paginacao/Paginacao.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TotalPages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/paginacao/item.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/my-lib/src/lib/paginacao/paginacao.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginacaoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            }
        ]
    }
}